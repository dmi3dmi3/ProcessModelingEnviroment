{
	'height' : '60',
	'width' : '80',
	'isolationPercent' : '50',
	'stepCount' : '1000',
	'loopEdges' : 'true',
	'global' :
	{
		'contagionPercent' : '5',
		'vacinationProb' : '3',
		'vacinationStepStart' : '360',
		'ilnessLenght' : '14',
		'immunityProb' : '60',
		'deathProb' : '5',
		'immunityLength' : '50'
	},
	'memory' : 
	{
		'daysInState' : '0'
	},
	'states': 
	{
		'0': 
		{
			'startPercent' : '99',
			'stateMachine' : 
			{
				'1' : 'return neighbors.StateCount(1) * global["contagionPercent"] > random.Next(100);',
				'5' : 'return n >= global["vacinationStepStart"] && global["vacinationProb"] > random.Next(100);'
			}
		},
		'1' : 
		{
			'startPercent' : '1',
			'stateMachine' : 
			{
				'2' : 
					'if (memory["daysInState"] >= global["ilnessLenght"] && global["immunityProb"] > random.Next(100))
					{
						memory["daysInState"] = 0;
						return true;
					}
					return false;',
				'3' : 
					'if (memory["daysInState"] >= global["ilnessLenght"] && 100 - global["immunityProb"] > random.Next(100))
					{
						memory["daysInState"] = 0;
						return true;
					}
					return false;',
				'4' : 
					'if (memory["daysInState"] >= global["ilnessLenght"] && global["deathProb"] > random.Next(100))
					{
						memory["daysInState"] = 0;
						return true;
					}
					return false;',
				'1' : 'memory["daysInState"]++; return true;'
			}
		},
		'2' :
		{
			'startPercent' : '0',
			'stateMachine' : 
			{

				'3' : 
					'if (memory["daysInState"] >= global["immunityLength"])
					{
						memory["daysInState"] = 0;
						return true;
					}
					return false;',
				'5' : 
					'if (n >= global["vacinationStepStart"] && global["vacinationProb"] > random.Next(100))
					{
						memory["daysInState"] = 0;
						return true;
					}
					return false;',
				'2' : 'memory["daysInState"]++; return true;'
			}
		},
		'3' :
		{
			'startPercent' : '0',
			'stateMachine' : 
			{
				'1' : 'return neighbors.StateCount(1) * global["contagionPercent"] > random.Next(100);',
				'5' : 'return n >= global["vacinationStepStart"] && global["vacinationProb"] > random.Next(100);'
			}
		},
		'4' :
		{
			'startPercent' : '0',
		},
		'5' :
		{
			'startPercent' : '0',
		}
	}
}