{
  "Height": 100,
  "Width": 100,
  "IsolationPercent": 0,
  "StepCount": 1000,
  "States": {
    "0": {
      "Start": "90%",
      "Name": "Пустая",
      "StateMachine": {
        "1": "    
        var phase = n%2;    
        int cw, ccw, op;    
        switch ((int)memory[position])    
        {    
            case 1:     
                cw = neighbors.E.State;    
                ccw = neighbors.S.State;    
                op = neighbors.SE.State;    
                break;    
            case 2:     
                cw = neighbors.S.State;    
                ccw = neighbors.W.State;    
                op = neighbors.SW.State;    
                break;    
            case 3:     
                cw = neighbors.N.State;    
                ccw = neighbors.E.State;    
                op = neighbors.NE.State;    
                break;    
           case 4:    
                cw = neighbors.W.State;    
                ccw = neighbors.N.State;    
                op = neighbors.NW.State;    
                break;    
            default:    
                return false;     
        }    
        if (cw == 2 || ccw == 2 || op == 2)    
                return false;     
        if (cw == 3 || ccw == 3 || op == 3)    
                return false;     
        if (cw == 1 && ccw == 1)    
                return false;     
        return phase == 0 ? ccw == 1 : cw == 1;",
        "2": "    
        var phase = n%2;    
        int cw, ccw, op;    
        switch ((int)memory[position])    
        {    
            case 1:     
                cw = neighbors.E.State;    
                ccw = neighbors.S.State;    
                op = neighbors.SE.State;    
                break;    
            case 2:     
                cw = neighbors.S.State;    
                ccw = neighbors.W.State;    
                op = neighbors.SW.State;    
                break;    
            case 3:     
                cw = neighbors.N.State;    
                ccw = neighbors.E.State;    
                op = neighbors.NE.State;    
                break;    
           case 4:    
                cw = neighbors.W.State;    
                ccw = neighbors.N.State;    
                op = neighbors.NW.State;    
                break;    
            default:    
                return false;     
        }    
        if (cw == 3 || ccw == 3 || op == 3)    
                return false;     
        if (cw == 1 && ccw == 1)    
                return false;     
        if (cw == 2 || ccw == 2 || op == 2)    
            return phase == 0 ? ccw == 1 || ccw == 2 : cw == 1 || cw == 2;    
        return false;"
      },
      "Preprocessor": "    
        if (x % 2 == 0)    
            if (y % 2 == 0)    
                memory[position] = n % 2 == 0 ? 1 : 4;    
            else    
                memory[position] = n % 2 == 0 ? 3 : 2;    
        else    
            if (y % 2 == 0)    
                memory[position] = n % 2 == 0 ? 2 : 3;    
            else    
                memory[position] = n % 2 == 0 ? 4 : 1;"
    },
    "1": {
      "Start": "10%",
      "Name": "Частица",
      "StateMachine": {
        "0": "    
        var phase = n%2;    
        int cw, ccw, op;    
        switch ((int)memory[position])    
        {    
            case 1:     
                cw = neighbors.E.State;    
                ccw = neighbors.S.State;    
                op = neighbors.SE.State;    
                break;    
            case 2:     
                cw = neighbors.S.State;    
                ccw = neighbors.W.State;    
                op = neighbors.SW.State;    
                break;    
            case 3:     
                cw = neighbors.N.State;    
                ccw = neighbors.E.State;    
                op = neighbors.NE.State;    
                break;    
            case 4:    
                cw = neighbors.W.State;    
                ccw = neighbors.N.State;    
                op = neighbors.NW.State;    
                break;    
            default:    
                return false;     
        }    
        if (cw == 3 || ccw == 3 || op == 3 || op == 1 || (cw == 1 && ccw == 1))    
                return false;     
        return phase == 0 ? ccw == 0 : cw == 0;",
        "2": "    
        var phase = n%2;    
        int cw, ccw, op;    
        switch ((int)memory[position])    
        {    
            case 1:     
                cw = neighbors.E.State;    
                ccw = neighbors.S.State;    
                op = neighbors.SE.State;    
                break;    
            case 2:     
                cw = neighbors.S.State;    
                ccw = neighbors.W.State;    
                op = neighbors.SW.State;    
                break;    
            case 3:     
                cw = neighbors.N.State;    
                ccw = neighbors.E.State;    
                op = neighbors.NE.State;    
                break;    
            case 4:    
                cw = neighbors.W.State;    
                ccw = neighbors.N.State;    
                op = neighbors.NW.State;    
                break;    
            default:    
                return false;     
        }    
        if (cw == 3 || ccw == 3 || op == 3 || op == 1 || (cw == 1 && ccw == 1))    
            if(cw == 2 || ccw == 2 || op == 2)    
                return true;    
            return false;     
        return phase == 0 ? ccw == 0 : cw == 0;"
      },
      "Preprocessor": "    
        if (x % 2 == 0)    
            if (y % 2 == 0)    
                memory[position] = n % 2 == 0 ? 1 : 4;    
            else    
                memory[position] = n % 2 == 0 ? 3 : 2;    
        else    
            if (y % 2 == 0)    
                memory[position] = n % 2 == 0 ? 2 : 3;    
            else    
                memory[position] = n % 2 == 0 ? 4 : 1;"
    },
    "2": {
      "Start": "1",
      "Name": "Зараженная частица",
      "StateMachine": {
        "0": "    
        var phase = n%2;    
        int cw, ccw, op;    
        switch ((int)memory[position])    
        {    
            case 1:     
                cw = neighbors.E.State;    
                ccw = neighbors.S.State;    
                op = neighbors.SE.State;    
                break;    
            case 2:     
                cw = neighbors.S.State;    
                ccw = neighbors.W.State;    
                op = neighbors.SW.State;    
                break;    
            case 3:     
                cw = neighbors.N.State;    
                ccw = neighbors.E.State;    
                op = neighbors.NE.State;    
                break;    
            case 4:    
                cw = neighbors.W.State;    
                ccw = neighbors.N.State;    
                op = neighbors.NW.State;    
                break;    
            default:    
                return false;     
        }    
        if (cw == 3 || ccw == 3 || op == 3 || op == 1 || (cw == 1 && ccw == 1))    
                return false;     
        return phase == 0 ? ccw == 0 : cw == 0;"
      },
      "Preprocessor": "    
        if (x % 2 == 0)    
            if (y % 2 == 0)    
                memory[position] = n % 2 == 0 ? 1 : 4;    
            else    
                memory[position] = n % 2 == 0 ? 3 : 2;    
        else    
            if (y % 2 == 0)    
                memory[position] = n % 2 == 0 ? 2 : 3;    
            else    
                memory[position] = n % 2 == 0 ? 4 : 1;"
    },
    "3": {
      "Start": "    
        return x % 99 == 0     
            || y % 99 == 0;",
      "Name": "Стенки"
    }
  },
  "LoopEdges": false,
  "Memory": {
    "position": 0.0
  },
  "Paths": {
    "CellarAutomatonLog": "C:\\Users\\dmi3d\\Desktop\\ProcessModelingEnviroment\\TestData\\test.ca",
    "StateGraphs": "C:\\Users\\dmi3d\\Desktop\\ProcessModelingEnviroment\\TestData\\test.sg"
  }
}